---

import Layout from '../layouts/Layout.astro';
// import Alert from '../components/Alert.astro';
import Btn from "../components/Btn.astro";

// const navs = ["Home", "About", "Contact"]

// オブジェクトの配列
// const navs = [
// 	{
// 		href: "home",
// 		label: "Home"
// 	},
// 	{
// 		href: "about",
// 		label: "About"
// 	},
// 	{
// 		href: "contact",
// 		label: "Contact"
// 	}
// ]

const color =  "yellow";
const btnTitle = "ボタン1";


// microCMSからブログのデータ取得
import { getBlogs } from 'src/utils/api';
import type { BlogType } from 'src/utils/api';
const { contents: blogs } = await getBlogs({
  // limit: 3, // 取得するデータの件数
  // offset: 0, // 取得するデータの開始位置
  // filters: , // 特定の条件で絞り込む
  orders: "-createdAt", // マイナスで降順(デフォルトで降順)
  // q: "javascript", // キーワード検索。ここではjavascriptがキーワード
});
// console.log(blogs);

// profileのデータ取得
import { getProfileData } from 'src/utils/api';

const data = await getProfileData({ 
  fields: ["name", "hobby", "image"] 
});
const { name, bobby, image } = data;
// console.log(data);


---


<Layout>
	<h1>Home</h1>

	<!-- <ul>
		{ 
			navs.map((nav, idx) => {
				return <li><a href={`./${nav.href}`}>{ nav.label }</a></li>
			})
		}
	</ul> -->

	<!-- <Alert /> -->

	<p class="alert">トップページの警告です</p>

	<p class="description">CSSに変数を使います</p>

  <div id="page-container" data-page="home">
    <section class="container">
      <div class="container__inner">
        <h2 class="container__title">セクションタイトル</h2>
        <div class="container__subtitle">サブタイトル</div>

        <div class="container__btn">
          <Btn btnTitle={ btnTitle }/>
        </div>

        <!-- ブログ一覧 -->
        <ul class="container__blogs">
          { 
            blogs.map(blog => {
              return (
                <li>
                  <a href="">
                    { blog.title }
                  </a>
                </li>
              )
            })
          }
        </ul>

        <!-- プロフィール -->
        <dl>
          <div>
            <dt>指名</dt>
            <dd></dd>
          </div>
          <div>
            <dt>趣味</dt>
            <dd></dd>
          </div>
          <div>
            <dt>画像</dt>
            <dd>
              <img src={image.url} alt="">
            </dd>
          </div>
        </dl>
      </div>

    </section>

    
  </div>
</Layout>


<!-- 
ここで書いたCSSはサーバー側でレンダリングされる
⭐️importなどcssを読み込んだり、ブラウザの機能を使う場合はクライアントサイドでレンダリングされる
コンポーネントごとにstyleをあてることができる。

headタグ内に埋め込まれて個別のクラス名が割り当てられる
→ .alert[data-astro-cid-wpkbbupk]{padding:10px;}

グローバルにはreset.cssをあてて
使い回すコンポーネントはコンポーネントに書いてサーバー側でレンダリングさせる
-->

<!-- 
	⭐️css
	・lang="scss" → scssを使う宣言
		→ config.mjs、tsconfig.json を書き換える
	・define:vars={{ color }}
		→ styleタグ内でCSS変数を使う場合に宣言
-->
<style 
	lang="scss" 
	define:vars={{ color }}
>
	.description{
		color: var(--color);
	}

	/* 別々のcssが使われる */
	/* .alert{
		padding: 10px;
		border: 1px solid #green;
		background-color: green;
	} */

	.container{
		margin-top: 10px;
	}

	.container__inner{
		margin: 0 auto;
		padding-left: 20px;
		padding-right: 20px;
		width: 100%;
		max-width: 768px;
	}

	.container__subtitle{
		/* color: $wineRed; */

		/* @include mq("tab"){
			color: $text;
		} */
	}

</style>


<!-- ⭐️クライアントでJavaScriptを使う記述方法 -->
<script is:inline>
  document.addEventListener("DOMContentLoaded", () => {
    const h1 = document.querySelector("h1");
    // console.log(h1); // ✅ ここならエラーなし

		// import("/src/script/index.js").then((module) => {
		// 	// console.log("スクリプトが読み込まれました");
		// })
  });
</script>

<!-- ⭐️`client:load` で外部JSを読み込む -->
<!-- <script client:load src="/scripts/index.js"></script> -->